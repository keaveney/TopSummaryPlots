#Function that takes dat file  and returns filled TH1F
from ROOT import TH1F
from array import *
import numpy as np

def make_histo(dat_file):

	f = open(dat_file, 'r')

	bins = []
	heights = []
	stat_unc = []
	sys_unc = []

	for line in f:   
            print line.split("$")[0]
            print line.split("$")[1]
            print line.split("$")[2]
            print line.split("$")[3]
            print line.split("$")[4]
            print line.split("$")[5]
            print line.split("$")[6]
            print line.split("$")[7]
            print line.split("$")[8]

	    if line.split(" ")[0] != " ":
		bins.append(float(line.split("\t")[0]))
		if line.split("\t")[1] != "-":
			heights.append(float(line.split("\t")[1]))
			stat_unc.append(float(line.split("\t")[2]))
			sys_unc.append(float(line.split("\t")[3]))

	bins_ar = array('d',bins)
	heights_ar = array('d',heights)

       	print bins_ar

	histogram = TH1F(dat_file, dat_file, len(bins_ar)-1, bins_ar)


	for bin in range(0,len(heights)):
		total_unc = ((stat_unc[bin]**2)+(sys_unc[bin]**2))**(0.5)
		histogram.SetBinContent(bin, heights_ar[bin])
		histogram.SetBinError(bin, total_unc)


	return histogram

